// utils.less



@import 'unity.less';

.arrowDown (@size, @color) {
	border-left: @size solid transparent;
	border-right: @size solid transparent;
	border-top: @size solid @color;
}

.arrowLeft (@size, @color) {
	border-top: @size solid transparent;
	border-bottom: @size solid transparent;
	border-right: @size solid @color;
}

.arrowRight (@size, @color) {
	border-top: @size solid transparent;
	border-bottom: @size solid transparent;
	border-left: @size solid @color;
}

.arrowUp (@size, @color) {
	border-left: @size solid transparent;
	border-right: @size solid transparent;
	border-bottom: @size solid @color;
}

.borderRadius (@radius) {
	-webkit-border-radius: @radius;
	-moz-border-radius: @radius;
	-ms-border-radius: @radius;
	-o-border-radius: @radius;
	border-radius: @radius;
}

.boxShadow (@blur: 0px, @color: black) {
    -webkit-box-shadow: 0 0 @blur 0 @color;
    -moz-box-shadow: 0 0 @blur 0 @color;
    box-shadow: 0 0 @blur 0 @color;
}

.center (@width, @height: @width) {
	left: 50%;
	top: 50%;
	margin-left: -(@width / 2);
	margin-top: -(@height / 2);
	position: absolute;
}

.centerText (@lineheight) {
	text-align: center;
	vertical-align: middle;
	line-height: @lineheight;
}

.fitToParent () {
	width: 100%;
	height: 100%;
}

.formatBackground () {
	background-position: center;
	background-repeat: no-repeat;
	background-size: contain;
}

.linearGradient (@color1, @color2) {
	background: -webkit-linear-gradient(left, @color1, @color2);
	background: -moz-linear-gradient(right, @color1, @color2);
	background: -o-linear-gradient(right, @color1, @color2);
	background: linear-gradient(to right, @color1, @color2);
}

.reflect(@height, @length: 50%, @opacity: 0.25){ // not standardized across browsers yet
	-webkit-box-reflect: below @height -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(@length, transparent), to(rgba(255, 255, 255, @opacity)));
}

.rotate (@rotation) {
	-webkit-transform: rotate(@rotation);
	-moz-transform: rotate(@rotation);
	-ms-transform: rotate(@rotation);
	-o-transform: rotate(@rotation);
	transform: rotate(@rotation);
}

.setDimensions (@width, @height: @width) {
	width: @width;
	height: @height;
}

.setFont (@size, @color) {
	color: @color;
	font-family: @stdfont;
	font-size: @size;
}

.setInCenter (@width, @height: @width) {
	.center(@width, @height);
	.setDimensions(@width, @height);
}

.stackLeft () {
	position: relative; // is this still necessary?
	display: inline-block; // needs testing
}

.stackRight () {
	position: relative;
	float: right;
}

.unselectable () {
	-webkit-user-select: none;
	-moz-user-select: none;
	-o-user-select: none;
	user-select: none;
}